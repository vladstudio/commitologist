{
  "name": "commitologist",
  "displayName": "Commitologist",
  "description": "Generate intelligent commit messages using AI",
  "version": "0.1.0",
  "publisher": "commitologist",
  "icon": "../../icons/icon.svg",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "../../dist/extension/extension/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "commitologist.generateMessage",
        "title": "Commitologist: Generate Commit Message",
        "icon": {
          "light": "../../icons/icon.svg",
          "dark": "../../icons/icon-dark.svg"
        }
      },
      {
        "command": "commitologist.configureProvider",
        "title": "Commitologist: Configure Provider Settings"
      },
      {
        "command": "commitologist.configurePreset",
        "title": "Commitologist: Configure Preset Settings"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "commitologist.generateMessage",
          "when": "scmProvider == git",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "commitologist.generateMessage",
          "when": "scmProvider == git"
        },
        {
          "command": "commitologist.configureProvider"
        },
        {
          "command": "commitologist.configurePreset"
        }
      ]
    },
    "configuration": {
      "title": "Commitologist",
      "properties": {
        "commitologist.aiProvider": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "gemini",
            "openrouter",
            "ollama"
          ],
          "default": "openai",
          "description": "AI provider to use for generating commit messages"
        },
        "commitologist.model": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "AI model to use for generating commit messages"
        },
        "commitologist.promptPreset": {
          "type": "string",
          "enum": [
            "conventional",
            "descriptive",
            "concise",
            "custom"
          ],
          "default": "conventional",
          "description": "Prompt preset to use for generating commit messages"
        },
        "commitologist.customPrompt": {
          "type": "string",
          "description": "Custom prompt template (used when promptPreset is 'custom')"
        },
        "commitologist.includeUnstagedFiles": {
          "type": "boolean",
          "default": true,
          "description": "Include unstaged files in commit message generation"
        },
        "commitologist.ollamaUrl": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "URL for Ollama server (when using Ollama provider)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build:extension": "cd ../.. && bun run build:extension"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "^18.0.0",
    "typescript": "^5.8.3"
  }
}
